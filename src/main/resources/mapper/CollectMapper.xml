<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.travel.repository.CollectMapper">
  <resultMap id="BaseResultMap" type="com.travel.travel.entity.Collect">
    <id column="collect_id" jdbcType="INTEGER" property="collectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="collect_type" jdbcType="INTEGER" property="collectType" />
    <result column="scenic_strategy" jdbcType="INTEGER" property="scenicStrategy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="typeName" jdbcType="VARCHAR" property="typeName" />
    <result column="countNum" jdbcType="INTEGER" property="countNum" />
    <result column="collectPhoto" jdbcType="VARCHAR" property="collectPhoto" />
  </resultMap>
  <sql id="Base_Column_List">
    collect_id, user_id, collect_type, scenic_strategy, create_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect
    where collect_id = #{collectId,jdbcType=INTEGER}
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update collect
    set is_delete=1
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="saveByPrimaryKey" parameterType="java.lang.Integer">
    update collect
    set is_delete=0
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.travel.travel.entity.Collect">
    insert into collect ( user_id, collect_type,
      scenic_strategy, create_time, is_delete
      )
    values ( #{userId,jdbcType=INTEGER}, #{collectType,jdbcType=INTEGER},
      #{scenicStrategy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 0
      )
  </insert>
  <insert id="insertSelective" parameterType="com.travel.travel.entity.Collect">
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectId != null">
        collect_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="collectType != null">
        collect_type,
      </if>
      <if test="scenicStrategy != null">
        scenic_strategy,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectId != null">
        #{collectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="collectType != null">
        #{collectType,jdbcType=INTEGER},
      </if>
      <if test="scenicStrategy != null">
        #{scenicStrategy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.travel.entity.Collect">
    update collect
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="collectType != null">
        collect_type = #{collectType,jdbcType=INTEGER},
      </if>
      <if test="scenicStrategy != null">
        scenic_strategy = #{scenicStrategy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.travel.entity.Collect">
    update collect
    set user_id = #{userId,jdbcType=INTEGER},
      collect_type = #{collectType,jdbcType=INTEGER},
      scenic_strategy = #{scenicStrategy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = 0
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="updateByCollect" parameterType="java.lang.Integer">
    update collect
    set is_delete=0
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <select id="selectByUserIdAndScenicId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select collect_id,
    user_id,
    collect_type,
    scenic_strategy,
    create_time,
    is_delete
    from collect
    where user_id = #{userId,jdbcType=INTEGER}
    and scenic_strategy=#{scenicId,jdbcType=INTEGER}
    <if test="collectType!=null and collectType!=0">
      and collect_type=#{collectType,jdbcType=INTEGER}
    </if>

  </select>
  <select id="selectByUserIdList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select c.collect_id,
    c.user_id,
    c.collect_type,
    c.scenic_strategy,
    c.create_time,
    c.is_delete,
    u.user_name,
    (case
    when(c.collect_type=1) then (SELECT s.scenic_name from scenics s where s.scenic_id=c.scenic_strategy)
    when(c.collect_type=2) then (SELECT st.strategy_name from strategy st where st.strategy_id =c.scenic_strategy)
    end )as typeName,
    (case
    when(c.collect_type=1) then (SELECT count(1) from scenics s left join collect c2 on s.scenic_id=c2.scenic_strategy where s.scenic_id=c.scenic_strategy GROUP BY s.scenic_id)
    when(c.collect_type=2) then (SELECT count(1) from strategy st left join collect c2 on st.strategy_id=c2.scenic_strategy where st.strategy_id =c.scenic_strategy GROUP BY st.strategy_id)
    end )as countNum
    from collect c left join users u on c.user_id=u.user_id
    where c.is_delete=0
    <if test="userId!=null and userId!=0">
      and user_id = #{userId,jdbcType=INTEGER}
    </if>
   order by  c.create_time DESC limit #{current},#{size}

  </select>

  <select id="selectByUserIdListCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1)
    from collect c left join users u on c.user_id=u.user_id
    where c.is_delete=0
    <if test="userId!=null and userId!=0">
      and user_id = #{userId,jdbcType=INTEGER}
    </if>

  </select>

  <select id="getCollectCount" resultType="java.lang.Integer">
    SELECT COUNT(1)
     from collect c left join users u on c.user_id=u.user_id
    where c.is_delete=0
    <if test="collectType!=null and collectType==1">
      and c.collect_type=1
    </if>
    <if test="collectType!=null and collectType==2">
      and c.collect_type=2
    </if>
    <if test="scenicId!=null and scenicId!=0">

    and scenic_strategy=#{scenicId,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getAllCollectUp"  resultMap="BaseResultMap">
    select c.collect_id,
    c.user_id,
    c.collect_type,
    c.scenic_strategy,
    c.create_time,
    c.is_delete,
    u.user_name
    <if test="collectType==1">
      ,
      s.scenic_name as TypeName,
      s.scenic_img as collectPhoto
    </if>
    <if test="collectType==2">
      ,
      st.strategy_name as TypeName,
      st.strategy_img as collectPhoto
    </if>
    from collect c left join users u on c.user_id=u.user_id
    <if test="collectType==1">
      left join scenics s on s.scenic_id=c.scenic_strategy
    </if>
    <if test="collectType==2">
      left join strategy st on st.strategy_id=c.scenic_strategy
    </if>
    where c.is_delete=0
    <if test="userId!=null and userId!=0">
      and c.user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="collectType==1">
      <if test="searchTitle != null and searchTitle !=''">
        and s.scenic_name like CONCAT ('%',#{searchTitle,jdbcType=VARCHAR},'%')
      </if>
    </if>
    <if test="collectType==2">
      <if test="searchTitle != null and searchTitle !=''">
        and st.strategy_name like CONCAT ('%',#{searchTitle,jdbcType=VARCHAR},'%')
      </if>
    </if>

    <if test="collectType!=null and collectType!=0">
      and c.collect_type = #{collectType,jdbcType=INTEGER}
    </if>
    <if test="start != null and start !='' and end != null and end !=''">
      and c.create_time between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
    </if>
    order by  c.create_time DESC limit #{current},#{size}

  </select>

  <select id="getCollectCountUp"  resultType="java.lang.Integer">
    select count(1)
    from collect c left join users u on c.user_id=u.user_id
    <if test="collectType==1">
      left join scenics s on s.scenic_id=c.scenic_strategy
    </if>
    <if test="collectType==2">
      left join strategy st on st.strategy_id=c.scenic_strategy
    </if>
    where c.is_delete=0
    <if test="userId!=null and userId!=0">
      and c.user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="collectType==1">
      <if test="searchTitle != null and searchTitle !=''">
        and s.scenic_name like CONCAT ('%',#{searchTitle,jdbcType=VARCHAR},'%')
      </if>
    </if>
    <if test="collectType==2">
      <if test="searchTitle != null and searchTitle !=''">
        and st.strategy_name like CONCAT ('%',#{searchTitle,jdbcType=VARCHAR},'%')
      </if>
    </if>

    <if test="collectType!=null and collectType!=0">
      and c.collect_type = #{collectType,jdbcType=INTEGER}
    </if>
    <if test="start != null and start !='' and end != null and end !=''">
      and c.create_time between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
    </if>

  </select>

</mapper>