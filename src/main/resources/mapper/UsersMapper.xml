<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.travel.repository.UsersMapper">
  <resultMap id="BaseResultMap" type="com.travel.travel.entity.Users">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_mail" jdbcType="VARCHAR" property="userMail" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_tel" jdbcType="VARCHAR" property="userTel" />
    <result column="user_head" jdbcType="VARCHAR" property="userHead" />
    <result column="is_lock" jdbcType="INTEGER" property="isLock" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="user_amount" jdbcType="DOUBLE" property="userAmount" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_mail, user_account, user_password,user_name, user_tel, user_head, is_lock, is_delete,user_amount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update  users set is_delete=1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.travel.travel.entity.Users">
    insert into users (user_mail, user_account,
      user_password,user_name, user_tel, user_head,
      is_lock, is_delete,user_amount)
    values ( #{userMail,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR},
      #{userPassword,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},  #{userTel,jdbcType=VARCHAR}, #{userHead,jdbcType=VARCHAR},
      0, 0,0)
  </insert>
  <insert id="insertSelective" parameterType="com.travel.travel.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userMail != null">
        user_mail,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>

        user_name,


        user_tel,


        user_head,

      <if test="isLock != null">
        is_lock,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userMail != null">
        #{userMail,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        #{isLock,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.travel.entity.Users">
    update users
    <set>
      <if test="userMail != null">
        user_mail = #{userMail,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        user_head = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        is_lock = #{isLock,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.travel.entity.Users">
    update users
    set
      user_account = #{userAccount,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_tel = #{userTel,jdbcType=VARCHAR},
      user_head = #{userHead,jdbcType=VARCHAR},
      is_lock = 0,
      is_delete = 0
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="loginByMailAndPassword"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where user_mail = #{userAccount,jdbcType=VARCHAR}
    or user_account = #{userAccount,jdbcType=VARCHAR}
    or user_tel = #{userAccount,jdbcType=VARCHAR}
  </select>

  <select id="findUserByMail"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where user_mail = #{userMail,jdbcType=VARCHAR}
  </select>
  <select id="findUserByAccount"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where user_account = #{userAccount,jdbcType=VARCHAR}
  </select>
  <select id="findUserByTel"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where user_tel = #{userTel,jdbcType=VARCHAR}
  </select>

  <select id="getAllUsers"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where is_delete=0
    <if test="userAccount != null">
      and user_account like CONCAT ('%',#{userAccount,jdbcType=VARCHAR},'%')
    </if>
    order by user_id DESC  limit #{current},#{size}
  </select>

  <update id="updateUserLock" >
    update  users set  is_lock = #{isLock,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="getAllUsersCount"  resultType="java.lang.Integer">
    select count(1)
    from users
    where is_delete=0
    <if test="userAccount != null">
      and user_account like CONCAT ('%',#{userAccount,jdbcType=VARCHAR},'%')
    </if>
  </select>

  <update id="updateUserAmount" >
    update  users set  user_amount = user_amount+#{userAmount,jdbcType=DOUBLE}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <update id="updateUserPassword" >
    update  users set  user_password = #{userPassword,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="getAllUsersLineId"  resultMap="BaseResultMap">
    select u.*
    from orders o,users u,line_group lg
    where u.user_id=o.user_id
    and o.line_or_hotel_id=lg.id
    and lg.id = #{lineId,jdbcType=INTEGER}

  </select>

  <select id="getAllUsersO"  resultType="java.lang.Long">
    select user_id from users u
  </select>

  <select id="getAllUsersLeader"  resultMap="BaseResultMap">
    select
    u.user_id,
    u.user_mail,
    u.user_account,
    u.user_password,
    u.user_name,
    u.user_tel,
    u.user_head,
    u.is_lock,
    u.is_delete,
    u.user_amount
    from users u
    left join orders o
    on u.user_id=o.user_id
    where u.is_delete=0
    and o.order_type=1
    and o.line_or_hotel_id=#{lineId,jdbcType=INTEGER}
    order by o.creat_time DESC limit #{current},#{size}
  </select>


  <select id="getAllUsersLeaderCount"  resultType="java.lang.Integer">
    select count(1)
     from users u
    left join orders o
    on u.user_id=o.user_id
    where u.is_delete=0
    and o.order_type=1
    and o.line_or_hotel_id=#{lineId,jdbcType=INTEGER}
  </select>


</mapper>